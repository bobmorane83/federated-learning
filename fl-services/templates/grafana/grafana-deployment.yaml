apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  selector:
    matchLabels:
      app: grafana
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: grafana
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: node-role.kubernetes.io/control-plane
                  operator: Exists
      containers:
      - env:
        - name: GF_INSTALL_PLUGINS
          value: grafana-piechart-panel, blackmirror1-singlestat-math-panel, pr0ps-trackmap-panel
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: admin123
        image: grafana/grafana:latest
        name: grafana
        # volumeMounts:
        # - mountPath: /etc/grafana/provisioning
        #   name: grafana-volume
        #   subPath: provisioning/
        # - mountPath: /var/lib/grafana/dashboards
        #   name: grafana-volume
        #   subPath: dashboards/
        # - mountPath: /etc/grafana/grafana.ini
        #   name: grafana-volume
        #   subPath: grafana.ini
        #   readOnly: true
        volumeMounts:
          - name: grafana-volume
            mountPath: /var/lib/grafana
          - name: grafana-config-volume
            mountPath: /etc/grafana/
      restartPolicy: Always
      volumes:
      # - name: grafana-volume
      #   hostPath:
      #     path: /grafana
        - name: grafana-volume
          persistentVolumeClaim:
            claimName: grafana-data
        - name: grafana-config-volume
          configMap:
            name: grafana-config
            items:
            - key: grafana.ini
              path: grafana.ini
            - key: datasource.yml
              path: provisioning/datasources/datasource.yml
            - key: dashboards.yml
              path: provisioning/dashboards/dashboards.yml
            - key: dashboard_index.json
              path: provisioning/dashboards/dashboard_index.json